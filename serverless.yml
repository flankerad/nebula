
service: nebula # NOTE: update this with your service name

custom:
  pythonRequirements:
    usePipenv: true
    zip: true
    slim: true
  dynamodb:
  # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    # Uncomment only if you already have a DynamoDB running locally
    # noStart: true

provider:
  name: aws
  runtime: python3.7
  stage: dev
  profile: flanker
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
      - "s3:*"
      Resource: "arn:aws:s3:::responsebody/*"
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/urlTable"


functions:
  get_title:
    handler: lambda/title.get_title
    memorySize: 256
    events:
      - http:
          path: lambda/get_title
          method: post
          cors: true
    environment:
      BUCKET: responsebody
  store_dynamo:
      handler: lambda/store_dynamo.store_dynamo
      memorySize: 256
      events:
        - http:
            path: lambda/store_dynamo
            method: post
            cors: true

package:
  exclude:
    - node_modules/**
    - .idea/**
    - .requirements/**
    - env/**
    - README.md
    - package.json
    - package-lock.json
    - requirements.txt
    - __pycache__/**

plugins:
  - serverless-offline
  - serverless-python-requirements
  - serverless-dynamodb-local

resources:
  Resources:
    UploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: responsebody
        CorsConfiguration:
          CorsRules:
          - AllowedMethods:
            - GET
            - PUT
            - POST
            - HEAD
            AllowedOrigins:
            - "*"
            AllowedHeaders:
            - "*"

    urlTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: urlTable
        AttributeDefinitions:
          - AttributeName: timeStamp
            AttributeType: S
        KeySchema:
          - AttributeName: timeStamp
            KeyType: HASH
        # Set the capacity based on the stage
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1